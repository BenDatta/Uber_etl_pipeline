{"timestamp":"2025-08-16T09:46:00.256394","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-16T09:46:00.257556","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/extract.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-16T09:46:00.523003","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-16T09:46:00.537655","level":"info","event":"Connection Retrieved 'models_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-16T09:46:00.543453","level":"info","event":"Running statement: \n        CREATE TABLE IF NOT EXISTS huggingface_models (\n            model_id VARCHAR(255) PRIMARY KEY,\n            author VARCHAR(255),\n            tags TEXT[],\n            pipeline_tag VARCHAR(255),\n            last_modified TIMESTAMP\n        );\n        , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.555529","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Nonene/sdxl_models', None, ['region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 56, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.573109","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.580232","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('3SixtyVentures/SN360386', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 55, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.581583","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.590522","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('miolg/080c8697', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 54, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.591926","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.598922","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('miolg/94e141f2', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 50, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.601328","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.607651","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('3SixtyVentures/SN360384', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 46, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.609084","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.614557","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('xhsane/epmgguf', None, ['transformers', 'gguf', 'llama', 'text-generation-inference', 'unsloth', 'en', 'license:apache-2.0', 'endpoints_compatible', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 46, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.615940","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.622011","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('bijaykumarsingh/whisper-large-v3-bn-cv17', None, ['transformers', 'tensorboard', 'safetensors', 'whisper', 'automatic-speech-recognition', 'generated_from_trainer', 'dataset:common_voice_17_0', 'base_model:openai/whisper-large-v3', 'base_model:finetune:openai/whisper-large-v3', 'model-index', 'endpoints_compatible', 'region:us'], 'automatic-speech-recognition', datetime.datetime(2025, 8, 16, 9, 45, 44, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.623329","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.628389","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Amanda2345/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-giant_shiny_sandpiper', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am giant_shiny_sandpiper', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 43, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.629659","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.635877","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('fibexx/Qwen3-0.6B-Gensyn-Swarm-sneaky_agile_llama', None, ['transformers', 'safetensors', 'qwen3', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am sneaky_agile_llama', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 40, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.637274","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.645638","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('jster/Everything', None, ['region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 36, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.647016","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.653615","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('god520/ZFT-Community-8B-BS4', None, ['transformers', 'safetensors', 'qwen3', 'text-generation', 'chat', 'finetune', 'chinese', 'conversational', 'zh', 'dataset:shibing624/alpaca-zh', 'base_model:Qwen/Qwen3-8B-Base', 'base_model:finetune:Qwen/Qwen3-8B-Base', 'license:apache-2.0', 'autotrain_compatible', 'text-generation-inference', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 36, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.655189","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.660965","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('aalv2/c69-h3', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 35, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.662285","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.668190","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('miolg/e748462c', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 35, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.669546","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.674789","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Cdivyam/wav2vec2-msti', None, ['tensorboard', 'safetensors', 'wav2vec2', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 35, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.676114","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.681313","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('moscowx21/Qwen2.5-1.5B-Instruct-Gensyn-Swarm-giant_pale_ferret', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'generated_from_trainer', 'rl-swarm', 'grpo', 'gensyn', 'I am giant pale ferret', 'unsloth', 'trl', 'genrl-swarm', 'I am giant_pale_ferret', 'conversational', 'arxiv:2402.03300', 'base_model:Gensyn/Qwen2.5-1.5B-Instruct', 'base_model:finetune:Gensyn/Qwen2.5-1.5B-Instruct', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 33, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.682722","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.688317","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('wuyanzu4692/task-13-Qwen-Qwen2.5-1.5B-Instruct', None, ['peft', 'safetensors', 'arxiv:1910.09700', 'base_model:Qwen/Qwen2.5-1.5B-Instruct', 'base_model:adapter:Qwen/Qwen2.5-1.5B-Instruct', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 24, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.689611","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.695123","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('mradermacher/med-gpt-oss-20b-i1-GGUF', None, ['transformers', 'gguf', 'smollm3', 'fine-tuned', 'causal-lm', 'text-generation', 'tonic', 'legml', 'en', 'fr', 'dataset:FreedomIntelligence/medical-o1-reasoning-SFT', 'base_model:Tonic/med-gpt-oss-20b', 'base_model:quantized:Tonic/med-gpt-oss-20b', 'license:apache-2.0', 'endpoints_compatible', 'region:us', 'imatrix', 'conversational'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 22, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.696354","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.702597","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('suzakuteam/Qwen3-32B-SFT-OmniMath-8epoch', None, ['safetensors', 'qwen3', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 21, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.703825","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.709150","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('aaaaaaawws/models-moved', None, ['region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 19, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.710408","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.715610","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('duygunuryldz/myGRPO_OROR5_Qwen3-8B_aegis', None, ['tensorboard', 'safetensors', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 16, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.717355","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.723113","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('mjolnirthors/gpt-oss-20b-trendyol-instruct-data', None, ['transformers', 'safetensors', 'generated_from_trainer', 'sft', 'trl', 'base_model:openai/gpt-oss-20b', 'base_model:finetune:openai/gpt-oss-20b', 'endpoints_compatible', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 15, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.724380","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.729758","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('asim22/sub38-22', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 14, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.731148","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.737603","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('asim22/sub38-22-n', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 8, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.738887","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.744304","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('asim22/sub38-199', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 7, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.745462","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.751840","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('gins92/Qwen2.5-1.5B-Instruct-Gensyn-Swarm-thriving_tawny_meerkat', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am thriving_tawny_meerkat', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, 6, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.753351","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.759309","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('miolg/3cb80233', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 45, 5, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.760987","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.766432","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('DosJimmyBrand/Qwen3-0.6B-Gensyn-Swarm-feline_fishy_toad', None, ['transformers', 'safetensors', 'qwen3', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am feline_fishy_toad', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 45, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.768064","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.773512","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('rockst4r4/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-docile_fishy_cobra', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'generated_from_trainer', 'rl-swarm', 'grpo', 'gensyn', 'I am docile fishy cobra', 'trl', 'genrl-swarm', 'I am docile_fishy_cobra', 'conversational', 'arxiv:2402.03300', 'base_model:Gensyn/Qwen2.5-0.5B-Instruct', 'base_model:finetune:Gensyn/Qwen2.5-0.5B-Instruct', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 59, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.774793","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.780167","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('cilantro9246/sn38-v2-10', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 59, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.782186","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.787869","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Fort171991/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-reclusive_bipedal_salmon', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am reclusive_bipedal_salmon', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 59, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.789282","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.794804","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('asim22/sub38-50', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 58, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.796115","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.802272","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('jimanex/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-bristly_scaly_chimpanzee', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am bristly_scaly_chimpanzee', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 58, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.803653","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.809091","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('cilantro9246/sn38-v2-9', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 57, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.810350","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.815631","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('aalv2/c70-h4', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 57, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.817437","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.822791","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('p2g5dolph3/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-peckish_ferocious_rhino', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'generated_from_trainer', 'rl-swarm', 'grpo', 'gensyn', 'I am peckish ferocious rhino', 'trl', 'genrl-swarm', 'I am peckish_ferocious_rhino', 'conversational', 'arxiv:2402.03300', 'base_model:unsloth/Qwen2.5-0.5B-Instruct', 'base_model:finetune:unsloth/Qwen2.5-0.5B-Instruct', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 52, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.824209","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.829472","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('duygunuryldz/myGRPO_OR1_Qwen3-1.7B_aegis', None, ['tensorboard', 'safetensors', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 51, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.830747","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.836804","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('AussieAck/DTS11_model', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 50, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.838213","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.844375","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('ahmadrix333/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-tenacious_reptilian_porpoise', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'generated_from_trainer', 'rl-swarm', 'grpo', 'gensyn', 'I am tenacious reptilian porpoise', 'trl', 'genrl-swarm', 'I am tenacious_reptilian_porpoise', 'conversational', 'arxiv:2402.03300', 'base_model:Gensyn/Qwen2.5-0.5B-Instruct', 'base_model:finetune:Gensyn/Qwen2.5-0.5B-Instruct', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 49, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.846373","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.852748","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('aalv2/c69-h4', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 47, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.854052","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.859174","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Biglionaire/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-screeching_untamed_porcupine', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am screeching_untamed_porcupine', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 46, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.860899","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.866218","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('finedowny/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-exotic_eager_mantis', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am exotic_eager_mantis', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 46, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.868190","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.873562","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('mradermacher/Deepseek-Coder-V2-Lite-13B-Instruct-sft-s1K-i1-GGUF', None, ['gguf', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 45, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.874790","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.880264","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('capungmerah627/blockassist-bc-stinging_soaring_porcupine_1755335953', None, ['gensyn', 'blockassist', 'gensyn-blockassist', 'minecraft', 'stinging soaring porcupine', 'arxiv:2504.07091', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 39, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.881505","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.887412","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('bieriszc/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-majestic_fanged_octopus', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am majestic_fanged_octopus', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 38, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.888654","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.894221","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('asim22/sub38-241', None, ['safetensors', 'llama', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 36, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.895459","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.901292","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Tiru8055/Qwen2.5-VL-3B-Instruct-Thinking', None, ['transformers', 'tensorboard', 'safetensors', 'generated_from_trainer', 'grpo', 'trl', 'arxiv:2402.03300', 'base_model:Qwen/Qwen2.5-VL-3B-Instruct', 'base_model:finetune:Qwen/Qwen2.5-VL-3B-Instruct', 'endpoints_compatible', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 36, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.902692","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.908007","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('Lavitate23/bert-from-single-text-file', None, ['peft', 'tensorboard', 'safetensors', 'base_model:adapter:bert-base-uncased', 'lora', 'transformers', 'base_model:google-bert/bert-base-uncased', 'base_model:adapter:google-bert/bert-base-uncased', 'license:apache-2.0', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 33, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.909296","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.914445","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('563defi/Qwen2.5-0.5B-Instruct-Gensyn-Swarm-squeaky_sturdy_buffalo', None, ['transformers', 'safetensors', 'qwen2', 'text-generation', 'rl-swarm', 'genrl-swarm', 'grpo', 'gensyn', 'I am squeaky_sturdy_buffalo', 'arxiv:1910.09700', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 32, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.915781","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.922058","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('vikasp1610/gemma-ft', None, ['transformers', 'pytorch', 'safetensors', 'qwen2', 'text-generation', 'generated_from_trainer', 'conversational', 'base_model:Qwen/Qwen2-0.5B-Instruct', 'base_model:finetune:Qwen/Qwen2-0.5B-Instruct', 'license:apache-2.0', 'autotrain_compatible', 'text-generation-inference', 'endpoints_compatible', 'region:us'], 'text-generation', datetime.datetime(2025, 8, 16, 9, 44, 31, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.923401","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.929132","level":"info","event":"Running statement: \n        INSERT INTO huggingface_models (model_id, author, tags, pipeline_tag, last_modified)\n        VALUES (%s, %s, %s, %s, %s)\n        ON CONFLICT (model_id) DO UPDATE SET\n            author = EXCLUDED.author,\n            tags = EXCLUDED.tags,\n            pipeline_tag = EXCLUDED.pipeline_tag,\n            last_modified = EXCLUDED.last_modified;\n        , parameters: ('quyanh/openai_summarize_tldr_sft-dpo', None, ['transformers', 'safetensors', 'generated_from_trainer', 'dpo', 'trl', 'arxiv:2305.18290', 'base_model:CarperAI/openai_summarize_tldr_sft', 'base_model:finetune:CarperAI/openai_summarize_tldr_sft', 'endpoints_compatible', 'region:us'], None, datetime.datetime(2025, 8, 16, 9, 44, 31, tzinfo=Timezone('UTC')))","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.930461","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T09:46:00.931682Z","level":"info","event":"LOAD COMPLETE: Loaded 50 records","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T09:46:00.931911","level":"info","event":"Done. Returned value was: Loaded 50 models","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-16T09:46:00.932159","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198b244-4628-78c9-a582-3e1906ecd2b1'), task_id='load_to_postgres', dag_id='models_etl_huggingface', run_id='scheduled__2025-08-16T00:00:00+00:00', try_number=1, map_index=-1, hostname='bae1ae5de4ec', context_carrier={}, task=<Task(PythonOperator): load_to_postgres>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 8, 16, 9, 45, 59, 950766, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/models_etl_huggingface/runs/scheduled__2025-08-16T00%3A00%3A00%2B00%3A00/tasks/load_to_postgres?try_number=1')","logger":"task"}
{"timestamp":"2025-08-16T16:05:16.340737","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-16T16:05:16.342460","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ai_models_etl.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-16T16:05:16.617557","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-16T16:05:16.638188","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"AirflowNotFoundException","exc_value":"The conn_id `models_connection` isn't defined","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/ai_models_etl.py","lineno":110,"name":"load_to_postgres"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":763,"name":"run"},{"filename":"/usr/local/lib/python3.12/contextlib.py","lineno":137,"name":"__enter__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":870,"name":"_create_autocommit_connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/postgres/hooks/postgres.py","lineno":159,"name":"get_conn"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":243,"name":"connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/hooks/base.py","lineno":64,"name":"get_connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py","lineno":478,"name":"get_connection_from_secrets"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/definitions/connection.py","lineno":147,"name":"get"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-16T16:47:44.305650","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-16T16:47:44.306626","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ai_models_etl.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-16T16:47:44.663529","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-16T16:47:44.681171","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"AirflowNotFoundException","exc_value":"The conn_id `models_connection` isn't defined","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/ai_models_etl.py","lineno":110,"name":"load_to_postgres"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":763,"name":"run"},{"filename":"/usr/local/lib/python3.12/contextlib.py","lineno":137,"name":"__enter__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":870,"name":"_create_autocommit_connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/postgres/hooks/postgres.py","lineno":159,"name":"get_conn"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":243,"name":"connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/hooks/base.py","lineno":64,"name":"get_connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py","lineno":478,"name":"get_connection_from_secrets"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/definitions/connection.py","lineno":147,"name":"get"}],"is_group":false,"exceptions":[]}]}
